<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>安恒杯2020-4月月赛-misc</title>
      <link href="/page/d10f.html"/>
      <url>/page/d10f.html</url>
      
        <content type="html"><![CDATA[<h4 id="MISC1-Blueshark"><a href="#MISC1-Blueshark" class="headerlink" title="MISC1-Blueshark"></a>MISC1-Blueshark</h4><p>难度：简单<br>题目描述：Can you dig something you want out from the sea-colored beautiful shark?<br>题目附件：blueshark.pcapng<br>解题思路：<br>1、打开题目后，发现是一个蓝牙协议的流量<br><img src="/images/%E5%AE%89%E6%81%92%E6%9D%AF4%E6%9C%88/1.png" alt=""><br>看不出什么东西，直接binwalk分析一下，发现存在一个7-zip文件<br><img src="/images/%E5%AE%89%E6%81%92%E6%9D%AF4%E6%9C%88/2.png" alt=""><br>2、提取压缩包<br>找到7z文件，找到对应的数据，将其提取出来<br><img src="/images/%E5%AE%89%E6%81%92%E6%9D%AF4%E6%9C%88/3.png" alt=""><br>找到对应的数据，直接导出分组字节流，存储为xx.7z或xx.zip<br>3、打开文件需要密码，说是PIN码，直接在数据包里搜索<br><img src="/images/%E5%AE%89%E6%81%92%E6%9D%AF4%E6%9C%88/4.png" alt=""><br>密码是141854<br>解密压缩包后得到flag<br><img src="/images/%E5%AE%89%E6%81%92%E6%9D%AF4%E6%9C%88/5.png" alt=""></p><h4 id="MISC2-Keyboard"><a href="#MISC2-Keyboard" class="headerlink" title="MISC2-Keyboard"></a>MISC2-Keyboard</h4><p>参考<code>Fzwjscj</code>师傅的wp：<a href="http://www.fzwjscj.xyz/index.php/archives/25/#misc3" target="_blank" rel="noopener">http://www.fzwjscj.xyz/index.php/archives/25/#misc3</a><br>参考<code>Ga1@xy</code>师傅的wp：<a href="http://www.ga1axy.top/index.php/archives/28/#keyboard" target="_blank" rel="noopener">http://www.ga1axy.top/index.php/archives/28/#keyboard</a></p><h4 id="MISC3-AWDshell"><a href="#MISC3-AWDshell" class="headerlink" title="MISC3-AWDshell"></a>MISC3-AWDshell</h4><p>难度：困难<br>题目描述：AWDshell<br>题目附件：awdshell.pcapng<br>解题思路：<br>1、打开流量包后发现大部分都是UDP流量，往下看看会发现存在一些http流量<br><img src="/images/%E5%AE%89%E6%81%92%E6%9D%AF4%E6%9C%88/6.png" alt=""><br>因为是awdshell，awd肯定是web或者pwn，那么分析一定就是http了，过滤一下<br>这里可以发现访问了upload.php，说明存在文件上传漏洞，追一下http流<br><img src="/images/%E5%AE%89%E6%81%92%E6%9D%AF4%E6%9C%88/7.png" alt=""><br>找到了上传的php木马，这里是rsa加密流量木马<br><img src="/images/%E5%AE%89%E6%81%92%E6%9D%AF4%E6%9C%88/8.png" alt=""><br>请求加密数据<br><img src="/images/%E5%AE%89%E6%81%92%E6%9D%AF4%E6%9C%88/9.png" alt=""><br>返回加密数据<br><img src="/images/%E5%AE%89%E6%81%92%E6%9D%AF4%E6%9C%88/10.png" alt=""><br>2、解密流量，进行分析<br>发送的流量是rsa加密的，返回流量看起来像base64加密，还不清楚<br>下方是解密脚本，因为发送的是rsa加密流量，根据rsa公钥解密可以获得密文</p><pre class="line-numbers language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token variable">$cmd</span> <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//密文</span><span class="token variable">$pk</span> <span class="token operator">=</span> <span class="token operator">&lt;</span><span class="token operator">&lt;</span><span class="token operator">&lt;</span><span class="token constant">EOF</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span><span class="token constant">BEGIN</span> <span class="token keyword">PUBLIC</span> <span class="token constant">KEY</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span>MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCmXoXBvXeanxgl51HBm2J6HPNhTQtfb8ICioE<span class="token operator">+</span>n0Ni0DlBFHSBprbsWYKJywVfdhJbLDCCon68uA1UYuy0yteDog3jOdweW2bscEGmeMXLQJfBHpQrg4wWoYJjD3QsKorYT6kdp1LRkuHE3PbpqvRtqO7ALzrcBi88Eu7oZaPANwIDAQAB<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span><span class="token constant">END</span> <span class="token keyword">PUBLIC</span> <span class="token constant">KEY</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span><span class="token constant">EOF</span><span class="token punctuation">;</span><span class="token variable">$cmds</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string">"|"</span><span class="token punctuation">,</span> <span class="token variable">$cmd</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$pk</span> <span class="token operator">=</span> <span class="token function">openssl_pkey_get_public</span><span class="token punctuation">(</span><span class="token variable">$pk</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$cmd</span> <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span><span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$cmds</span> <span class="token keyword">as</span> <span class="token variable">$value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">openssl_public_decrypt</span><span class="token punctuation">(</span><span class="token function">base64_decode</span><span class="token punctuation">(</span><span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token variable">$de</span><span class="token punctuation">,</span> <span class="token variable">$pk</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token variable">$cmd</span> <span class="token punctuation">.</span><span class="token operator">=</span> <span class="token variable">$de</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">echo</span> <span class="token variable">$cmd</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>经过逐条查找后发现flag相关的流量在这里，直接对它进行分析即可<br><img src="/images/%E5%AE%89%E6%81%92%E6%9D%AF4%E6%9C%88/11.png" alt=""><br>3、解密流量，获取flag<br>这是该条流量解密后的流量数据，是一个php脚本<br><img src="/images/%E5%AE%89%E6%81%92%E6%9D%AF4%E6%9C%88/12.png" alt=""><br>格式美化：<a href="http://www.jsons.cn/phpformat/" target="_blank" rel="noopener">http://www.jsons.cn/phpformat/</a><br>格式化后分析一下脚本，发现返回流量是AES加密，头尾会增加垃圾字符<br><img src="/images/%E5%AE%89%E6%81%92%E6%9D%AF4%E6%9C%88/13.png" alt=""><br>获取返回流量，去除头尾垃圾字符</p><pre><code>+L8pc9pJEhqPQ1cmL18eJXX9QGADkKnp8A1j7s4oX2Qo8YJNGNTbuaXu+OfynYgRewqyfLj/Wrg0rgKj/cRdO4zJMmfLfyFVB4pBRYeTetM0G/w/Px6+xI/WPlRrx/+MvK6eQyPr+xDqTX82AqiGrOYDwN94/vuGcLS7NAxhty4=</code></pre><p>session前16位：<code>hm3pq66843bbbrdg</code></p><p><img src="/images/%E5%AE%89%E6%81%92%E6%9D%AF4%E6%9C%88/14.png" alt=""><br>AES在线解密链接：<a href="http://tool.chacuo.net/cryptaes" target="_blank" rel="noopener">http://tool.chacuo.net/cryptaes</a><br>在线对数据进行解密，即可拿到flag<br>返回结果是base64，在进行一次base64解密<br><img src="/images/%E5%AE%89%E6%81%92%E6%9D%AF4%E6%9C%88/15.png" alt=""><br>对数据进行两次base64解密即可拿到flag<br><img src="/images/%E5%AE%89%E6%81%92%E6%9D%AF4%E6%9C%88/16.png" alt=""></p><h4 id="MISC4-（签到题）6G还远吗？"><a href="#MISC4-（签到题）6G还远吗？" class="headerlink" title="MISC4-（签到题）6G还远吗？"></a>MISC4-（签到题）6G还远吗？</h4><p>难度：入门<br>题目描述：5G都来了，6G还远吗？6G下还需要开会员才能高速下载吗？<br>解题思路：<br>就如同题目的描述一样，你需要冲会员才能下载<br>这道题目根本就没打算要你下载下来近一个G的文件，flag藏在了文件头部<br>点击下载后直接记事本查看头部就可以看到flag了<br><img src="/images/%E5%AE%89%E6%81%92%E6%9D%AF4%E6%9C%88/17.png" alt=""></p><h4 id="MISC5-4月月赛题目质量问卷调查"><a href="#MISC5-4月月赛题目质量问卷调查" class="headerlink" title="MISC5-4月月赛题目质量问卷调查"></a>MISC5-4月月赛题目质量问卷调查</h4><p>难度：入门<br>题目描述：送分题XD<br>给了一个链接，是一个调查问卷，进去直接填好后提交就给flag</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> 安恒杯 </tag>
            
            <tag> MISC </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Burpsuite插件</title>
      <link href="/page/7f9e.html"/>
      <url>/page/7f9e.html</url>
      
        <content type="html"><![CDATA[<h5 id="Reissue-Request-Scripter插件"><a href="#Reissue-Request-Scripter插件" class="headerlink" title="Reissue Request Scripter插件"></a>Reissue Request Scripter插件</h5><p>官方链接：<a href="https://github.com/PortSwigger/reissue-request-scripter" target="_blank" rel="noopener">https://github.com/PortSwigger/reissue-request-scripter</a></p><p>下载链接：<a href="https://github.com/h3xstream/http-script-generator/blob/gh-pages/releases/burp/scriptgen-burp-plugin-6.jar?raw=true" target="_blank" rel="noopener">https://github.com/h3xstream/http-script-generator/blob/gh-pages/releases/burp/scriptgen-burp-plugin-6.jar?raw=true</a></p><h6 id="功能："><a href="#功能：" class="headerlink" title="功能："></a>功能：</h6><p>可以根据抓取的包自动解析生成各类语言的脚本，非常适合用于AWD比赛一类，省去了脚本框架编写的步骤。</p><h6 id="安装："><a href="#安装：" class="headerlink" title="安装："></a>安装：</h6><p>下载到本地后是一个.jar的包，需要先打开Burpsuite，然后点击Extender安装插件，详情见下图</p><p><img src="/images/Burpsuite/1.png" alt=""></p><p><img src="/images/Burpsuite/2.png" alt=""></p><p><img src="/images/Burpsuite/3.png" alt=""></p><p>到了这里，我们就已经安装好了，接下来演示如何使用</p><p><img src="/images/Burpsuite/4.png" alt=""></p><p><img src="/images/Burpsuite/5.png" alt=""></p><p>这里可以选择各类语言的脚本，均可自动生成</p><p><img src="/images/Burpsuite/6.png" alt=""></p><p>将生成的脚本copy到对应的运行环境就可以运行辣！！！</p><p>下方是Python3脚本运行结果</p><p><img src="/images/Burpsuite/7.png" alt=""></p><h6 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h6><p>这个插件是正在工作中的同学推荐的  感觉是个非常好的插件了，对于AWD比赛中快速编辑批量脚本有很大的帮助，另外没有学习过或者不会写脚本的小伙伴也可以去学习自动生成的脚本，根据其意思学会自己编写脚本。</p>]]></content>
      
      
      <categories>
          
          <category> Tools </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Burpsuite </tag>
            
            <tag> Tools </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>USB协议流量分析</title>
      <link href="/page/9593.html"/>
      <url>/page/9593.html</url>
      
        <content type="html"><![CDATA[<p>使用工具：<br>Wireshark<br>Python</p><h1 id="USB键盘流量"><a href="#USB键盘流量" class="headerlink" title="USB键盘流量"></a>USB键盘流量</h1><p>这里讲一讲键盘流量的一个分析原理，暂且不做例题讲解</p><p>区分：键盘流量的变化体现在Leftover Capture Data的8组数据中的第三组</p><p>首先，我们知道可以通过Wireshark工具抓取外接键盘的数据流量。</p><p>那么是如何知道输入了哪些数据的呢？其实有一张键位对照的表格，只要对着表格替换就是键入数据啦。</p><p>下方是一个比较好用的能够区分大小写的脚本，上面的字典内容就是按照键位对照表生成的。</p><p>我们来举个例子，Leftover Capture Data：00002c0000000000</p><p>可以看到上面数据共16个字符，2个字符一组分为8组   00:00:2c:00:00:00:00:00</p><p>可以清晰的看到第三组的数据为击键信息：2c，那么它对应的按键就是<SPACE> 可以在下方字典中找到</p><p>那么为什么可以说下方的脚本可以区分大小写输出键入内容呢？</p><p>原理：当Leftover Capture Data：0<strong>2</strong>002c0000000000  第一组数据第二位为2时，即为大写内容</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true">#python3</span>normalKeys <span class="token operator">=</span> <span class="token punctuation">{</span>    <span class="token string">"04"</span><span class="token punctuation">:</span><span class="token string">"a"</span><span class="token punctuation">,</span> <span class="token string">"05"</span><span class="token punctuation">:</span><span class="token string">"b"</span><span class="token punctuation">,</span> <span class="token string">"06"</span><span class="token punctuation">:</span><span class="token string">"c"</span><span class="token punctuation">,</span> <span class="token string">"07"</span><span class="token punctuation">:</span><span class="token string">"d"</span><span class="token punctuation">,</span> <span class="token string">"08"</span><span class="token punctuation">:</span><span class="token string">"e"</span><span class="token punctuation">,</span>    <span class="token string">"09"</span><span class="token punctuation">:</span><span class="token string">"f"</span><span class="token punctuation">,</span> <span class="token string">"0a"</span><span class="token punctuation">:</span><span class="token string">"g"</span><span class="token punctuation">,</span> <span class="token string">"0b"</span><span class="token punctuation">:</span><span class="token string">"h"</span><span class="token punctuation">,</span> <span class="token string">"0c"</span><span class="token punctuation">:</span><span class="token string">"i"</span><span class="token punctuation">,</span> <span class="token string">"0d"</span><span class="token punctuation">:</span><span class="token string">"j"</span><span class="token punctuation">,</span>     <span class="token string">"0e"</span><span class="token punctuation">:</span><span class="token string">"k"</span><span class="token punctuation">,</span> <span class="token string">"0f"</span><span class="token punctuation">:</span><span class="token string">"l"</span><span class="token punctuation">,</span> <span class="token string">"10"</span><span class="token punctuation">:</span><span class="token string">"m"</span><span class="token punctuation">,</span> <span class="token string">"11"</span><span class="token punctuation">:</span><span class="token string">"n"</span><span class="token punctuation">,</span> <span class="token string">"12"</span><span class="token punctuation">:</span><span class="token string">"o"</span><span class="token punctuation">,</span>      <span class="token string">"13"</span><span class="token punctuation">:</span><span class="token string">"p"</span><span class="token punctuation">,</span> <span class="token string">"14"</span><span class="token punctuation">:</span><span class="token string">"q"</span><span class="token punctuation">,</span> <span class="token string">"15"</span><span class="token punctuation">:</span><span class="token string">"r"</span><span class="token punctuation">,</span> <span class="token string">"16"</span><span class="token punctuation">:</span><span class="token string">"s"</span><span class="token punctuation">,</span> <span class="token string">"17"</span><span class="token punctuation">:</span><span class="token string">"t"</span><span class="token punctuation">,</span>       <span class="token string">"18"</span><span class="token punctuation">:</span><span class="token string">"u"</span><span class="token punctuation">,</span> <span class="token string">"19"</span><span class="token punctuation">:</span><span class="token string">"v"</span><span class="token punctuation">,</span> <span class="token string">"1a"</span><span class="token punctuation">:</span><span class="token string">"w"</span><span class="token punctuation">,</span> <span class="token string">"1b"</span><span class="token punctuation">:</span><span class="token string">"x"</span><span class="token punctuation">,</span> <span class="token string">"1c"</span><span class="token punctuation">:</span><span class="token string">"y"</span><span class="token punctuation">,</span>        <span class="token string">"1d"</span><span class="token punctuation">:</span><span class="token string">"z"</span><span class="token punctuation">,</span><span class="token string">"1e"</span><span class="token punctuation">:</span><span class="token string">"1"</span><span class="token punctuation">,</span> <span class="token string">"1f"</span><span class="token punctuation">:</span><span class="token string">"2"</span><span class="token punctuation">,</span> <span class="token string">"20"</span><span class="token punctuation">:</span><span class="token string">"3"</span><span class="token punctuation">,</span> <span class="token string">"21"</span><span class="token punctuation">:</span><span class="token string">"4"</span><span class="token punctuation">,</span>         <span class="token string">"22"</span><span class="token punctuation">:</span><span class="token string">"5"</span><span class="token punctuation">,</span> <span class="token string">"23"</span><span class="token punctuation">:</span><span class="token string">"6"</span><span class="token punctuation">,</span><span class="token string">"24"</span><span class="token punctuation">:</span><span class="token string">"7"</span><span class="token punctuation">,</span><span class="token string">"25"</span><span class="token punctuation">:</span><span class="token string">"8"</span><span class="token punctuation">,</span><span class="token string">"26"</span><span class="token punctuation">:</span><span class="token string">"9"</span><span class="token punctuation">,</span>         <span class="token string">"27"</span><span class="token punctuation">:</span><span class="token string">"0"</span><span class="token punctuation">,</span><span class="token string">"28"</span><span class="token punctuation">:</span><span class="token string">"&lt;RET>"</span><span class="token punctuation">,</span><span class="token string">"29"</span><span class="token punctuation">:</span><span class="token string">"&lt;ESC>"</span><span class="token punctuation">,</span><span class="token string">"2a"</span><span class="token punctuation">:</span><span class="token string">"&lt;DEL>"</span><span class="token punctuation">,</span> <span class="token string">"2b"</span><span class="token punctuation">:</span><span class="token string">"\t"</span><span class="token punctuation">,</span>         <span class="token string">"2c"</span><span class="token punctuation">:</span><span class="token string">"&lt;SPACE>"</span><span class="token punctuation">,</span><span class="token string">"2d"</span><span class="token punctuation">:</span><span class="token string">"-"</span><span class="token punctuation">,</span><span class="token string">"2e"</span><span class="token punctuation">:</span><span class="token string">"="</span><span class="token punctuation">,</span><span class="token string">"2f"</span><span class="token punctuation">:</span><span class="token string">"["</span><span class="token punctuation">,</span><span class="token string">"30"</span><span class="token punctuation">:</span><span class="token string">"]"</span><span class="token punctuation">,</span><span class="token string">"31"</span><span class="token punctuation">:</span><span class="token string">"\\"</span><span class="token punctuation">,</span>         <span class="token string">"32"</span><span class="token punctuation">:</span><span class="token string">"&lt;NON>"</span><span class="token punctuation">,</span><span class="token string">"33"</span><span class="token punctuation">:</span><span class="token string">";"</span><span class="token punctuation">,</span><span class="token string">"34"</span><span class="token punctuation">:</span><span class="token string">"'"</span><span class="token punctuation">,</span><span class="token string">"35"</span><span class="token punctuation">:</span><span class="token string">"&lt;GA>"</span><span class="token punctuation">,</span><span class="token string">"36"</span><span class="token punctuation">:</span><span class="token string">","</span><span class="token punctuation">,</span><span class="token string">"37"</span><span class="token punctuation">:</span><span class="token string">"."</span><span class="token punctuation">,</span>         <span class="token string">"38"</span><span class="token punctuation">:</span><span class="token string">"/"</span><span class="token punctuation">,</span><span class="token string">"39"</span><span class="token punctuation">:</span><span class="token string">"&lt;CAP>"</span><span class="token punctuation">,</span><span class="token string">"3a"</span><span class="token punctuation">:</span><span class="token string">"&lt;F1>"</span><span class="token punctuation">,</span><span class="token string">"3b"</span><span class="token punctuation">:</span><span class="token string">"&lt;F2>"</span><span class="token punctuation">,</span> <span class="token string">"3c"</span><span class="token punctuation">:</span><span class="token string">"&lt;F3>"</span><span class="token punctuation">,</span><span class="token string">"3d"</span><span class="token punctuation">:</span><span class="token string">"&lt;F4>"</span><span class="token punctuation">,</span>         <span class="token string">"3e"</span><span class="token punctuation">:</span><span class="token string">"&lt;F5>"</span><span class="token punctuation">,</span><span class="token string">"3f"</span><span class="token punctuation">:</span><span class="token string">"&lt;F6>"</span><span class="token punctuation">,</span><span class="token string">"40"</span><span class="token punctuation">:</span><span class="token string">"&lt;F7>"</span><span class="token punctuation">,</span><span class="token string">"41"</span><span class="token punctuation">:</span><span class="token string">"&lt;F8>"</span><span class="token punctuation">,</span><span class="token string">"42"</span><span class="token punctuation">:</span><span class="token string">"&lt;F9>"</span><span class="token punctuation">,</span><span class="token string">"43"</span><span class="token punctuation">:</span><span class="token string">"&lt;F10>"</span><span class="token punctuation">,</span>         <span class="token string">"44"</span><span class="token punctuation">:</span><span class="token string">"&lt;F11>"</span><span class="token punctuation">,</span><span class="token string">"45"</span><span class="token punctuation">:</span><span class="token string">"&lt;F12>"</span><span class="token punctuation">}</span>shiftKeys <span class="token operator">=</span> <span class="token punctuation">{</span>    <span class="token string">"04"</span><span class="token punctuation">:</span><span class="token string">"A"</span><span class="token punctuation">,</span> <span class="token string">"05"</span><span class="token punctuation">:</span><span class="token string">"B"</span><span class="token punctuation">,</span> <span class="token string">"06"</span><span class="token punctuation">:</span><span class="token string">"C"</span><span class="token punctuation">,</span> <span class="token string">"07"</span><span class="token punctuation">:</span><span class="token string">"D"</span><span class="token punctuation">,</span> <span class="token string">"08"</span><span class="token punctuation">:</span><span class="token string">"E"</span><span class="token punctuation">,</span>     <span class="token string">"09"</span><span class="token punctuation">:</span><span class="token string">"F"</span><span class="token punctuation">,</span> <span class="token string">"0a"</span><span class="token punctuation">:</span><span class="token string">"G"</span><span class="token punctuation">,</span> <span class="token string">"0b"</span><span class="token punctuation">:</span><span class="token string">"H"</span><span class="token punctuation">,</span> <span class="token string">"0c"</span><span class="token punctuation">:</span><span class="token string">"I"</span><span class="token punctuation">,</span> <span class="token string">"0d"</span><span class="token punctuation">:</span><span class="token string">"J"</span><span class="token punctuation">,</span>      <span class="token string">"0e"</span><span class="token punctuation">:</span><span class="token string">"K"</span><span class="token punctuation">,</span> <span class="token string">"0f"</span><span class="token punctuation">:</span><span class="token string">"L"</span><span class="token punctuation">,</span> <span class="token string">"10"</span><span class="token punctuation">:</span><span class="token string">"M"</span><span class="token punctuation">,</span> <span class="token string">"11"</span><span class="token punctuation">:</span><span class="token string">"N"</span><span class="token punctuation">,</span> <span class="token string">"12"</span><span class="token punctuation">:</span><span class="token string">"O"</span><span class="token punctuation">,</span>       <span class="token string">"13"</span><span class="token punctuation">:</span><span class="token string">"P"</span><span class="token punctuation">,</span> <span class="token string">"14"</span><span class="token punctuation">:</span><span class="token string">"Q"</span><span class="token punctuation">,</span> <span class="token string">"15"</span><span class="token punctuation">:</span><span class="token string">"R"</span><span class="token punctuation">,</span> <span class="token string">"16"</span><span class="token punctuation">:</span><span class="token string">"S"</span><span class="token punctuation">,</span> <span class="token string">"17"</span><span class="token punctuation">:</span><span class="token string">"T"</span><span class="token punctuation">,</span>        <span class="token string">"18"</span><span class="token punctuation">:</span><span class="token string">"U"</span><span class="token punctuation">,</span> <span class="token string">"19"</span><span class="token punctuation">:</span><span class="token string">"V"</span><span class="token punctuation">,</span> <span class="token string">"1a"</span><span class="token punctuation">:</span><span class="token string">"W"</span><span class="token punctuation">,</span> <span class="token string">"1b"</span><span class="token punctuation">:</span><span class="token string">"X"</span><span class="token punctuation">,</span> <span class="token string">"1c"</span><span class="token punctuation">:</span><span class="token string">"Y"</span><span class="token punctuation">,</span>         <span class="token string">"1d"</span><span class="token punctuation">:</span><span class="token string">"Z"</span><span class="token punctuation">,</span><span class="token string">"1e"</span><span class="token punctuation">:</span><span class="token string">"!"</span><span class="token punctuation">,</span> <span class="token string">"1f"</span><span class="token punctuation">:</span><span class="token string">"@"</span><span class="token punctuation">,</span> <span class="token string">"20"</span><span class="token punctuation">:</span><span class="token string">"#"</span><span class="token punctuation">,</span> <span class="token string">"21"</span><span class="token punctuation">:</span><span class="token string">"$"</span><span class="token punctuation">,</span>          <span class="token string">"22"</span><span class="token punctuation">:</span><span class="token string">"%"</span><span class="token punctuation">,</span> <span class="token string">"23"</span><span class="token punctuation">:</span><span class="token string">"^"</span><span class="token punctuation">,</span><span class="token string">"24"</span><span class="token punctuation">:</span><span class="token string">"&amp;"</span><span class="token punctuation">,</span><span class="token string">"25"</span><span class="token punctuation">:</span><span class="token string">"*"</span><span class="token punctuation">,</span><span class="token string">"26"</span><span class="token punctuation">:</span><span class="token string">"("</span><span class="token punctuation">,</span><span class="token string">"27"</span><span class="token punctuation">:</span><span class="token string">")"</span><span class="token punctuation">,</span>          <span class="token string">"28"</span><span class="token punctuation">:</span><span class="token string">"&lt;RET>"</span><span class="token punctuation">,</span><span class="token string">"29"</span><span class="token punctuation">:</span><span class="token string">"&lt;ESC>"</span><span class="token punctuation">,</span><span class="token string">"2a"</span><span class="token punctuation">:</span><span class="token string">"&lt;DEL>"</span><span class="token punctuation">,</span> <span class="token string">"2b"</span><span class="token punctuation">:</span><span class="token string">"\t"</span><span class="token punctuation">,</span><span class="token string">"2c"</span><span class="token punctuation">:</span><span class="token string">"&lt;SPACE>"</span><span class="token punctuation">,</span>          <span class="token string">"2d"</span><span class="token punctuation">:</span><span class="token string">"_"</span><span class="token punctuation">,</span><span class="token string">"2e"</span><span class="token punctuation">:</span><span class="token string">"+"</span><span class="token punctuation">,</span><span class="token string">"2f"</span><span class="token punctuation">:</span><span class="token string">"{"</span><span class="token punctuation">,</span><span class="token string">"30"</span><span class="token punctuation">:</span><span class="token string">"}"</span><span class="token punctuation">,</span><span class="token string">"31"</span><span class="token punctuation">:</span><span class="token string">"|"</span><span class="token punctuation">,</span><span class="token string">"32"</span><span class="token punctuation">:</span><span class="token string">"&lt;NON>"</span><span class="token punctuation">,</span><span class="token string">"33"</span><span class="token punctuation">:</span><span class="token string">"\""</span><span class="token punctuation">,</span>          <span class="token string">"34"</span><span class="token punctuation">:</span><span class="token string">":"</span><span class="token punctuation">,</span><span class="token string">"35"</span><span class="token punctuation">:</span><span class="token string">"&lt;GA>"</span><span class="token punctuation">,</span><span class="token string">"36"</span><span class="token punctuation">:</span><span class="token string">"&lt;"</span><span class="token punctuation">,</span><span class="token string">"37"</span><span class="token punctuation">:</span><span class="token string">">"</span><span class="token punctuation">,</span><span class="token string">"38"</span><span class="token punctuation">:</span><span class="token string">"?"</span><span class="token punctuation">,</span><span class="token string">"39"</span><span class="token punctuation">:</span><span class="token string">"&lt;CAP>"</span><span class="token punctuation">,</span><span class="token string">"3a"</span><span class="token punctuation">:</span><span class="token string">"&lt;F1>"</span><span class="token punctuation">,</span>          <span class="token string">"3b"</span><span class="token punctuation">:</span><span class="token string">"&lt;F2>"</span><span class="token punctuation">,</span> <span class="token string">"3c"</span><span class="token punctuation">:</span><span class="token string">"&lt;F3>"</span><span class="token punctuation">,</span><span class="token string">"3d"</span><span class="token punctuation">:</span><span class="token string">"&lt;F4>"</span><span class="token punctuation">,</span><span class="token string">"3e"</span><span class="token punctuation">:</span><span class="token string">"&lt;F5>"</span><span class="token punctuation">,</span><span class="token string">"3f"</span><span class="token punctuation">:</span><span class="token string">"&lt;F6>"</span><span class="token punctuation">,</span><span class="token string">"40"</span><span class="token punctuation">:</span><span class="token string">"&lt;F7>"</span><span class="token punctuation">,</span>          <span class="token string">"41"</span><span class="token punctuation">:</span><span class="token string">"&lt;F8>"</span><span class="token punctuation">,</span><span class="token string">"42"</span><span class="token punctuation">:</span><span class="token string">"&lt;F9>"</span><span class="token punctuation">,</span><span class="token string">"43"</span><span class="token punctuation">:</span><span class="token string">"&lt;F10>"</span><span class="token punctuation">,</span><span class="token string">"44"</span><span class="token punctuation">:</span><span class="token string">"&lt;F11>"</span><span class="token punctuation">,</span><span class="token string">"45"</span><span class="token punctuation">:</span><span class="token string">"&lt;F12>"</span><span class="token punctuation">}</span>output <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>keys <span class="token operator">=</span> open<span class="token punctuation">(</span><span class="token string">'xxx.txt'</span><span class="token punctuation">)</span><span class="token keyword">for</span> line <span class="token keyword">in</span> keys<span class="token punctuation">:</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> line<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">!=</span><span class="token string">'0'</span> <span class="token operator">or</span> <span class="token punctuation">(</span>line<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">!=</span><span class="token string">'0'</span> <span class="token operator">and</span> line<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">!=</span><span class="token string">'2'</span><span class="token punctuation">)</span> <span class="token operator">or</span> line<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token operator">!=</span><span class="token string">'0'</span> <span class="token operator">or</span> line<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token operator">!=</span><span class="token string">'0'</span> <span class="token operator">or</span> line<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token operator">!=</span><span class="token string">'0'</span> <span class="token operator">or</span> line<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token operator">!=</span><span class="token string">'0'</span> <span class="token operator">or</span> line<span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span><span class="token operator">!=</span><span class="token string">'0'</span> <span class="token operator">or</span> line<span class="token punctuation">[</span><span class="token number">13</span><span class="token punctuation">]</span><span class="token operator">!=</span><span class="token string">'0'</span> <span class="token operator">or</span> line<span class="token punctuation">[</span><span class="token number">15</span><span class="token punctuation">]</span><span class="token operator">!=</span><span class="token string">'0'</span> <span class="token operator">or</span> line<span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span><span class="token operator">!=</span><span class="token string">'0'</span> <span class="token operator">or</span> line<span class="token punctuation">[</span><span class="token number">18</span><span class="token punctuation">]</span><span class="token operator">!=</span><span class="token string">'0'</span> <span class="token operator">or</span> line<span class="token punctuation">[</span><span class="token number">19</span><span class="token punctuation">]</span><span class="token operator">!=</span><span class="token string">'0'</span> <span class="token operator">or</span> line<span class="token punctuation">[</span><span class="token number">21</span><span class="token punctuation">]</span><span class="token operator">!=</span><span class="token string">'0'</span> <span class="token operator">or</span> line<span class="token punctuation">[</span><span class="token number">22</span><span class="token punctuation">]</span><span class="token operator">!=</span><span class="token string">'0'</span> <span class="token operator">or</span> line<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">:</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token string">"00"</span><span class="token punctuation">:</span>             <span class="token keyword">continue</span>        <span class="token keyword">if</span> line<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">:</span><span class="token number">8</span><span class="token punctuation">]</span> <span class="token keyword">in</span> normalKeys<span class="token punctuation">.</span>keys<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            output <span class="token operator">+=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span>normalKeys<span class="token punctuation">[</span>line<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">:</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span>shiftKeys<span class="token punctuation">[</span>line<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">:</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span>line<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token string">'2'</span><span class="token punctuation">]</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            output <span class="token operator">+=</span> <span class="token punctuation">[</span><span class="token string">'[unknown]'</span><span class="token punctuation">]</span>    <span class="token keyword">except</span><span class="token punctuation">:</span>        <span class="token keyword">pass</span>keys<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>flag<span class="token operator">=</span><span class="token number">0</span><span class="token comment" spellcheck="true">#print("".join(output))</span><span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span>len<span class="token punctuation">(</span>output<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        a<span class="token operator">=</span>output<span class="token punctuation">.</span>index<span class="token punctuation">(</span><span class="token string">'&lt;DEL>'</span><span class="token punctuation">)</span>        <span class="token keyword">del</span> output<span class="token punctuation">[</span>a<span class="token punctuation">]</span>        <span class="token keyword">del</span> output<span class="token punctuation">[</span>a<span class="token number">-1</span><span class="token punctuation">]</span>    <span class="token keyword">except</span><span class="token punctuation">:</span>        <span class="token keyword">pass</span><span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span>len<span class="token punctuation">(</span>output<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> output<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">==</span><span class="token string">"&lt;CAP>"</span><span class="token punctuation">:</span>            flag<span class="token operator">+=</span><span class="token number">1</span>            output<span class="token punctuation">.</span>pop<span class="token punctuation">(</span>i<span class="token punctuation">)</span>            <span class="token keyword">if</span> flag<span class="token operator">==</span><span class="token number">2</span><span class="token punctuation">:</span>                flag<span class="token operator">=</span><span class="token number">0</span>        <span class="token keyword">if</span> flag<span class="token operator">!=</span><span class="token number">0</span><span class="token punctuation">:</span>            output<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span>output<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>upper<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">except</span><span class="token punctuation">:</span>        <span class="token keyword">pass</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'output :'</span> <span class="token operator">+</span> <span class="token string">""</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>output<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>上方是键盘流量的解题脚本，下方说一下ctf中解题步奏</p><p>1、打开流量包，分析出键盘和鼠标流量类型</p><p>2、使用tshark数据进行提起tshark -r xxx.pcapng -T fields -e usb.capdata &gt;xxx.txt</p><p>3、提取后运行上方脚本即可得到键盘输入的内容</p>]]></content>
      
      
      <categories>
          
          <category> MISC </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> 流量分析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MISC-刷题记录</title>
      <link href="/page/eb9d.html"/>
      <url>/page/eb9d.html</url>
      
        <content type="html"><![CDATA[<h4 id="1、nmapll-pcapng流量分析"><a href="#1、nmapll-pcapng流量分析" class="headerlink" title="1、nmapll.pcapng流量分析"></a>1、nmapll.pcapng流量分析</h4><p>附件下载<br>链接：<a href="https://pan.baidu.com/s/1vPnPVPKkQltwbnUp5MzNig" target="_blank" rel="noopener">https://pan.baidu.com/s/1vPnPVPKkQltwbnUp5MzNig</a>  提取码：hgar</p><p>题目描述</p><pre><code>在参加网络安全大赛第二届世界巡回赛新加坡站一场与SP战队的比赛时，作为K&amp;K战队主防手的你使用经典的“三条命令”检查端口封闭状况。可是这次比赛平台没有回显，你能查出来有哪些端口是开放的嘛？请将开放端口按由小到大顺序写入flag中 如：开放1、22、234端口，flag{122234}</code></pre><p>根据题目的描述，这是出自《亲爱的，热爱的》电视剧中的一段故事，其中有效信息如下图<br><img src="/images/nmapl.jpg" alt=""><br>根据上图我们可以看到这是对自己进行了扫描，使用了 -sT -A参数<br><img src="/images/nmap2.jpg" alt=""><br>参考链接：<a href="https://www.cocosec.com/archives/114.html" target="_blank" rel="noopener">https://www.cocosec.com/archives/114.html</a><br>由上图可以得知在进行TCP完全链接扫描时，会进行三次握手，而握手成功的标识就是返回SYN与ACK包<br>由此我们可以在wireshark中构造过滤条件，选出符合条件的数据包<br>过滤语句：<code>tcp.flags.ack == 1 and tcp.flags.syn == 1</code></p><p><img src="/images/nmapll.png" alt=""><br>经过观察可以得到flag{21226318013306}</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
          <category> MISC </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> MISC </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WEB-刷题记录</title>
      <link href="/page/cb27.html"/>
      <url>/page/cb27.html</url>
      
        <content type="html"><![CDATA[<h4 id="WEB1-HCTF2018-WEB"><a href="#WEB1-HCTF2018-WEB" class="headerlink" title="WEB1-HCTF2018-WEB"></a>WEB1-HCTF2018-WEB</h4><p>version：4.8.1 文件包含漏洞 <a href="https://xz.aliyun.com/t/5534#toc-3" target="_blank" rel="noopener">https://xz.aliyun.com/t/5534#toc-3</a><br>该漏洞cve编号为CVE-2018-12613 <a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-12613" target="_blank" rel="noopener">http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-12613</a></p><pre class="line-numbers language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span>    <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">class</span> <span class="token class-name">emmm</span>    <span class="token punctuation">{</span>        <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">function</span> <span class="token function">checkFile</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token variable">$page</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            <span class="token variable">$whitelist</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"source"</span><span class="token operator">=</span><span class="token operator">></span><span class="token string">"source.php"</span><span class="token punctuation">,</span><span class="token string">"hint"</span><span class="token operator">=</span><span class="token operator">></span><span class="token string">"hint.php"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span> <span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$page</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token operator">!</span><span class="token function">is_string</span><span class="token punctuation">(</span><span class="token variable">$page</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">echo</span> <span class="token string">"you can't see it"</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$page</span><span class="token punctuation">,</span> <span class="token variable">$whitelist</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token variable">$_page</span> <span class="token operator">=</span> <span class="token function">mb_substr</span><span class="token punctuation">(</span>                <span class="token variable">$page</span><span class="token punctuation">,</span>                <span class="token number">0</span><span class="token punctuation">,</span>                <span class="token function">mb_strpos</span><span class="token punctuation">(</span><span class="token variable">$page</span> <span class="token punctuation">.</span> <span class="token string">'?'</span><span class="token punctuation">,</span> <span class="token string">'?'</span><span class="token punctuation">)</span>            <span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$_page</span><span class="token punctuation">,</span> <span class="token variable">$whitelist</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token variable">$_page</span> <span class="token operator">=</span> <span class="token function">urldecode</span><span class="token punctuation">(</span><span class="token variable">$page</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token variable">$_page</span> <span class="token operator">=</span> <span class="token function">mb_substr</span><span class="token punctuation">(</span>                <span class="token variable">$_page</span><span class="token punctuation">,</span>                <span class="token number">0</span><span class="token punctuation">,</span>                <span class="token function">mb_strpos</span><span class="token punctuation">(</span><span class="token variable">$_page</span> <span class="token punctuation">.</span> <span class="token string">'?'</span><span class="token punctuation">,</span> <span class="token string">'?'</span><span class="token punctuation">)</span>            <span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$_page</span><span class="token punctuation">,</span> <span class="token variable">$whitelist</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">echo</span> <span class="token string">"you can't see it"</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span> <span class="token function">empty</span><span class="token punctuation">(</span><span class="token variable">$_REQUEST</span><span class="token punctuation">[</span><span class="token string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token operator">&amp;&amp;</span> <span class="token function">is_string</span><span class="token punctuation">(</span><span class="token variable">$_REQUEST</span><span class="token punctuation">[</span><span class="token string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token operator">&amp;&amp;</span> emmm<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">checkFile</span><span class="token punctuation">(</span><span class="token variable">$_REQUEST</span><span class="token punctuation">[</span><span class="token string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">include</span> <span class="token variable">$_REQUEST</span><span class="token punctuation">[</span><span class="token string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        exit<span class="token punctuation">;</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>        <span class="token keyword">echo</span> <span class="token string">"&lt;br>&lt;img src=\"https://i.loli.net/2018/11/01/5bdb0d93dc794.jpg\" />"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token delimiter">?></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这是一道php代码审计的题目，其中hint.php 内容为： ffffllllaaaagggg</p><p>进行代码审计，发现下方传入的file参数必须是字符串类型，然后传入checkFile()方法</p><pre class="line-numbers language-php"><code class="language-php"><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span> <span class="token function">empty</span><span class="token punctuation">(</span><span class="token variable">$_REQUEST</span><span class="token punctuation">[</span><span class="token string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token operator">&amp;&amp;</span> <span class="token function">is_string</span><span class="token punctuation">(</span><span class="token variable">$_REQUEST</span><span class="token punctuation">[</span><span class="token string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token operator">&amp;&amp;</span> emmm<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">checkFile</span><span class="token punctuation">(</span><span class="token variable">$_REQUEST</span><span class="token punctuation">[</span><span class="token string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token punctuation">)</span><span class="token function">checkFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span>方法分析<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span> <span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$page</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token operator">!</span><span class="token function">is_string</span><span class="token punctuation">(</span><span class="token variable">$page</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">//file值不能为空，且必须是字符串</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$page</span><span class="token punctuation">,</span> <span class="token variable">$whitelist</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">//必须再白名单中即 source.php 和 hint.php</span><span class="token variable">$_page</span> <span class="token operator">=</span> <span class="token function">mb_substr</span><span class="token punctuation">(</span>     <span class="token comment" spellcheck="true">//截取传入参入 ? 之前的字符</span>                <span class="token variable">$page</span><span class="token punctuation">,</span>                <span class="token number">0</span><span class="token punctuation">,</span>                <span class="token function">mb_strpos</span><span class="token punctuation">(</span><span class="token variable">$page</span> <span class="token punctuation">.</span> <span class="token string">'?'</span><span class="token punctuation">,</span> <span class="token string">'?'</span><span class="token punctuation">)</span>            <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$_page</span> <span class="token operator">=</span> <span class="token function">urldecode</span><span class="token punctuation">(</span><span class="token variable">$page</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//对传入的参数进行一次url解码</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>可见，file参数需要满足以下几点<br>有三个if语句可以返回true，第二个语句直接判断$page，不可用<br>第三个语句截取’?’前部分，由于?被后部分被解析为get方式提交的参数，也不可利用<br>第四个if语句中，先进行url解码再截取，因此我们可以将?经过两次url编码，在服务器端提取参数时解码一次，checkFile函数中解码一次，仍会解码为’?’，仍可通过第四个if语句校验。（’?’两次编码值为’%253f’）,构造url：<br>由此，我们可以构造payload：?source.php%253f../../../../../ffffllllaaaagggg</p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安恒杯2020-02月赛</title>
      <link href="/page/d624.html"/>
      <url>/page/d624.html</url>
      
        <content type="html"><![CDATA[<h4 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h4><h4 id="Reverse"><a href="#Reverse" class="headerlink" title="Reverse"></a>Reverse</h4><p>第一次做逆序题，这次是一道简单的py逆向题用来练习练习<br>题目附件是一个pyc文件，可以使用uncompyle6反编译为py文件<br>uncompyle6链接：<a href="https://github.com/rocky/python-uncompyle6" target="_blank" rel="noopener">https://github.com/rocky/python-uncompyle6</a></p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> base64<span class="token punctuation">,</span> string<span class="token keyword">def</span> <span class="token function">caser</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token punctuation">:</span>    enc1 <span class="token operator">=</span> <span class="token string">''</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> flag<span class="token punctuation">:</span>        enc1 <span class="token operator">+=</span> chr<span class="token punctuation">(</span>ord<span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">5</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> enc1<span class="token keyword">def</span> <span class="token function">rail</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token punctuation">:</span>    p1 <span class="token operator">=</span> p2 <span class="token operator">=</span> p3 <span class="token operator">=</span> enc2 <span class="token operator">=</span> <span class="token string">''</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span>len<span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        j <span class="token operator">=</span> i <span class="token operator">%</span> <span class="token number">3</span>        <span class="token keyword">if</span> j <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>            p1 <span class="token operator">+=</span> flag<span class="token punctuation">[</span>i<span class="token punctuation">]</span>        <span class="token keyword">elif</span> j <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">:</span>            p2 <span class="token operator">+=</span> flag<span class="token punctuation">[</span>i<span class="token punctuation">]</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            p3 <span class="token operator">+=</span> flag<span class="token punctuation">[</span>i<span class="token punctuation">]</span>    enc2 <span class="token operator">=</span> p1 <span class="token operator">+</span> p2 <span class="token operator">+</span> p3    <span class="token keyword">return</span> enc2<span class="token keyword">def</span> <span class="token function">rep</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token punctuation">:</span>    table1 <span class="token operator">=</span> <span class="token string">'qwertyuiopasdfghjklzxcvbnmQWERTYUIOPASDFGHJKLZXCVBNM'</span>    table2 <span class="token operator">=</span> <span class="token string">'QWERTYUIOPASDFGHJKLZXCVBNMqwertyuiopasdfghjklzxcvbnm'</span>    table <span class="token operator">=</span> string<span class="token punctuation">.</span>maketrans<span class="token punctuation">(</span>table1<span class="token punctuation">,</span> table2<span class="token punctuation">)</span>    <span class="token keyword">return</span> flag<span class="token punctuation">.</span>translate<span class="token punctuation">(</span>table<span class="token punctuation">,</span> <span class="token string">'='</span><span class="token punctuation">)</span><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    flag <span class="token operator">=</span> raw_input<span class="token punctuation">(</span><span class="token string">'please input flag to check:'</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> rep<span class="token punctuation">(</span>base64<span class="token punctuation">.</span>b64encode<span class="token punctuation">(</span>rail<span class="token punctuation">(</span>caser<span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">'ywjCytmRxI9CycWZngD2ncTDkZqYlJrGmhHCxISUnfWSlgfDlJi'</span><span class="token punctuation">:</span>        <span class="token keyword">print</span> <span class="token string">'Success!you got it!'</span>        <span class="token keyword">break</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">print</span> <span class="token string">'try a gain'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如果是汇编的逆向我就不会了 但是py的还是可以搞一搞的</p><p>这是一个比较简单的算法，如果不会写脚本用手也可以算出来<br>加密<br>1、flag先逐位进行ascii值-5再转化为ascii码的操作 caser()函数<br>2、对flag每三位一循环的依次截取<br>3、对上述结果进行了base64加密<br>4、对base64加密结果大小写进行转换，并且删除了=</p><p>这个算法，只要我们输入的数==’ywjCytmRxI9CycWZngD2ncTDkZqYlJrGmhHCxISUnfWSlgfDlJi’就可以拿到flag</p><p>解密<br>1、原函数照抄，rep()函数进行大小写转换<br>2、进行base64解密，注意要加上’=’ 否则可能会报错  在线解密应该可以解出来<br>3、rail()函数是最麻烦的一个    分析后发现p1、p2、p3分别截取<br>了13、13、12位字符串，将其取出来并逐个进行拼接<br>4、将拼接结果逐位进行ascii值+5并转换位ascii码-得到flag</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true">#!/usr/bin/env python</span><span class="token comment" spellcheck="true"># -*- coding: utf-8 -*-</span><span class="token keyword">import</span> base64<span class="token punctuation">,</span>string<span class="token keyword">def</span> <span class="token function">rep</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true">#替换大小写</span>    table1 <span class="token operator">=</span> <span class="token string">'qwertyuiopasdfghjklzxcvbnmQWERTYUIOPASDFGHJKLZXCVBNM'</span>    table2 <span class="token operator">=</span> <span class="token string">'QWERTYUIOPASDFGHJKLZXCVBNMqwertyuiopasdfghjklzxcvbnm'</span>    table <span class="token operator">=</span> str<span class="token punctuation">.</span>maketrans<span class="token punctuation">(</span>table1<span class="token punctuation">,</span> table2<span class="token punctuation">)</span>    <span class="token keyword">return</span> flag<span class="token punctuation">.</span>translate<span class="token punctuation">(</span>table<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">deflag</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token comment" spellcheck="true">#解密flag</span>    flag_str<span class="token operator">=</span><span class="token string">""</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> flag<span class="token punctuation">:</span>        flag_str <span class="token operator">+=</span> chr<span class="token punctuation">(</span>ord<span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">5</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> flag_str<span class="token keyword">def</span> <span class="token function">p1_p2_p3</span><span class="token punctuation">(</span>enc<span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token comment" spellcheck="true">#解密p1,p2,p3</span>    p1 <span class="token operator">=</span> str<span class="token punctuation">(</span>enc<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">13</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">"b'"</span><span class="token punctuation">,</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">"'"</span><span class="token punctuation">,</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">"\\\\"</span><span class="token punctuation">,</span><span class="token string">"\\"</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">#切片后会输入 b'xxxx'   所以删掉了b''   其中会有\\的转义字符，只需要一个即可</span>    p2 <span class="token operator">=</span> str<span class="token punctuation">(</span>enc<span class="token punctuation">[</span><span class="token number">13</span><span class="token punctuation">:</span><span class="token number">26</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">"b'"</span><span class="token punctuation">,</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">"'"</span><span class="token punctuation">,</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">"\\\\"</span><span class="token punctuation">,</span><span class="token string">"\\"</span><span class="token punctuation">)</span>    p3 <span class="token operator">=</span> str<span class="token punctuation">(</span>enc<span class="token punctuation">[</span><span class="token number">26</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">"b'"</span><span class="token punctuation">,</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">"'"</span><span class="token punctuation">,</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">"\\\\"</span><span class="token punctuation">,</span><span class="token string">"\\"</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">" "</span>    de_str<span class="token operator">=</span><span class="token string">""</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">13</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        de_str <span class="token operator">+=</span>p1<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">+</span>p2<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">+</span>p3<span class="token punctuation">[</span>i<span class="token punctuation">]</span>  <span class="token comment" spellcheck="true">#将每一段的第一个字符依次拼接   即i%3==0   ==1  ==2,3  ...</span>    <span class="token keyword">return</span> de_strbase_str<span class="token operator">=</span>rep<span class="token punctuation">(</span><span class="token string">'ywjCytmRxI9CycWZngD2ncTDkZqYlJrGmhHCxISUnfWSlgfDlJi'</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"="</span>  <span class="token comment" spellcheck="true">#大小写替换</span>debase_str <span class="token operator">=</span> base64<span class="token punctuation">.</span>b64decode<span class="token punctuation">(</span>base_str<span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">#base64解密</span><span class="token keyword">print</span><span class="token punctuation">(</span>deflag<span class="token punctuation">(</span>p1_p2_p3<span class="token punctuation">(</span>debase_str<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#flag{ca90f038b900ac91471a3fe9b1e38579}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> 安恒杯 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo搭建-matery主题</title>
      <link href="/page/8dc0.html"/>
      <url>/page/8dc0.html</url>
      
        <content type="html"><![CDATA[<h4 id="1、前期准备"><a href="#1、前期准备" class="headerlink" title="1、前期准备"></a>1、前期准备</h4><p>1.安装Git<br>windwows：<a href="https://gitforwindows.org/" target="_blank" rel="noopener">https://gitforwindows.org/</a><br>linux   ：<code>sudo apt-get install git</code></p><p>2.安装nodejs<br>windwos：<a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">https://nodejs.org/en/download/</a><br>linux：如下</p><pre><code>sudo apt-get install nodejssudo apt-get install npm安装完成后，打开命令行检查，windwos也相同node -vnpm -v</code></pre><p>3.安装Hexo</p><p>在安装之前先安装一下淘宝镜像源，不然可能会后续出现因为网络问题报错<br>命令：<code>npm install -g cnpm --registry=https://registry.npm.taobao.org</code><br>然后在任意位置创建例如：Blog文件夹，然后右键打开安装好的Git Bash Here<br>安装Hexo命令：<code>cnpm install -g hexo-cli</code><br>检测是否安装 ：<code>hexo -v</code><br>初始化博客   ：<code>hexo init</code><br>启动博客   ：<code>hexo s</code><br>此时，打开<a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a> 即可访问到hexo</p><h4 id="2、连接Github"><a href="#2、连接Github" class="headerlink" title="2、连接Github"></a>2、连接Github</h4><p>1.打开<a href="https://github.com/" target="_blank" rel="noopener">https://github.com/</a> 注册一个账户<br>2.创建一个与你用户名相同的仓库，整体为：用户名.github.io ，只有这样才会被Github page识别<br>3.生成SSH添加到Github</p><pre><code>本地Git Bash Here中执行git config --global user.name &quot;yourname&quot;git config --global user.email &quot;youremail&quot;检查输入的用户名和邮箱是否有错误git config user.namegit config user.email创建SSH密钥ssh-keygen -t rsa -C &quot;youremail&quot;</code></pre><p>此时会生成id_rsa.pub文件，将内容复制到github中，添加ssh密钥 <a href="https://github.com/settings/keys" target="_blank" rel="noopener">https://github.com/settings/keys</a><br>4.测试是否连接github成功：<code>ssh -T git@github.com</code><br>打开博客根目录的_config.yml文件</p><pre><code>deploy:  type: git  repo: git@github.com:仓库名.github.io.git  推荐直接复制自己的仓库名  branch: master</code></pre><h4 id="3、部署hexo到Github"><a href="#3、部署hexo到Github" class="headerlink" title="3、部署hexo到Github"></a>3、部署hexo到Github</h4><p>进到之前创建好的Blog目录下，打开git bash here 执行<code>cnpm install --save hexo-deployer-git</code></p><pre><code>清除缓存 hexo clean生成静态文章 hexo generate 缩写 hexo g部署文章到Github hexo deploy 缩写：hexo d</code></pre><p>此时，访问仓库名.github.io应该就可以访问到博客啦</p><h4 id="4、更换主题"><a href="#4、更换主题" class="headerlink" title="4、更换主题"></a>4、更换主题</h4><p>下载hexo-theme-matery主题<code>git clone https://github.com/blinkfox/hexo-theme-matery.git</code><br>修改根目录下的_config.yml</p><pre><code># Extensions## Plugins: https://hexo.io/plugins/## Themes: https://hexo.io/themes/theme: hexo-theme-matery #根据下载后的主题名来写</code></pre><p>1.新建分类categories页：<code>hexo new page &quot;categories&quot;</code><br>编辑你刚刚新建的页面文件 /source/categories/index.md</p><pre><code>---title: categoriesdate: 2018-09-30 17:25:30type: &quot;categories&quot;layout: &quot;categories&quot;---</code></pre><p>2.新建标签 tags 页：<code>hexo new page &quot;tags&quot;</code><br>编辑你刚刚新建的页面文件 /source/tags/index.md</p><pre><code>---title: tagsdate: 2018-09-30 18:23:38type: &quot;tags&quot;layout: &quot;tags&quot;---</code></pre><p>3.新建关于我 about 页：<code>hexo new page &quot;about&quot;</code><br>编辑你刚刚新建的页面文件 /source/about/index.md</p><pre><code>---title: aboutdate: 2018-09-30 17:25:30type: &quot;about&quot;layout: &quot;about&quot;---</code></pre><p>4.新建友情连接 friends 页（可选的）<code>hexo new page &quot;friends&quot;</code><br>编辑你刚刚新建的页面文件 /source/friends/index.md</p><pre><code>---title: friendsdate: 2018-12-12 21:25:30type: &quot;friends&quot;layout: &quot;friends&quot;---</code></pre><p>同时，在source目录下创建_data目录，在_data目录下新建friends.json文件</p><pre><code>文件内容格式：[{    &quot;avatar&quot;: &quot;http://image.luokangyuan.com/1_qq_27922023.jpg&quot;,    &quot;name&quot;: &quot;码酱&quot;,    &quot;introduction&quot;: &quot;我不是大佬，只是在追寻大佬的脚步&quot;,    &quot;url&quot;: &quot;http://luokangyuan.com/&quot;,    &quot;title&quot;: &quot;前去学习&quot;}, {    &quot;avatar&quot;: &quot;http://image.luokangyuan.com/4027734.jpeg&quot;,    &quot;name&quot;: &quot;闪烁之狐&quot;,    &quot;introduction&quot;: &quot;编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬&quot;,    &quot;url&quot;: &quot;https://blinkfox.github.io/&quot;,    &quot;title&quot;: &quot;前去学习&quot;}, {    &quot;avatar&quot;: &quot;http://image.luokangyuan.com/avatar.jpg&quot;,    &quot;name&quot;: &quot;ja_rome&quot;,    &quot;introduction&quot;: &quot;平凡的脚步也可以走出伟大的行程&quot;,    &quot;url&quot;: &quot;ttps://me.csdn.net/jlh912008548&quot;,    &quot;title&quot;: &quot;前去学习&quot;}]</code></pre><p>关于后续的一些主题修改这位师傅写的比较详细：<a href="https://purethought.cn/c308959f.html" target="_blank" rel="noopener">https://purethought.cn/c308959f.html</a><br>mastery主题搭建及优化：<a href="https://segmentfault.com/a/1190000021923137#item-6-32" target="_blank" rel="noopener">https://segmentfault.com/a/1190000021923137#item-6-32</a><br>_config.yml文件讲解：<a href="https://hexo.io/zh-cn/docs/configuration" target="_blank" rel="noopener">https://hexo.io/zh-cn/docs/configuration</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
